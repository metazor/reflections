How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It made it easy to spot the typo.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I could switch back to older versions if something goes wrong. It would make
    comparing different versions easier as well.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: - separates the commits into logical units
          - possibility of choosing the commit size
    Cons: - possibility of forgetting to commit

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    It's because they are usually used for different types of files.

How can you use the commands git log and git diff to view the history of files?

    git log shows the commit history, so we can find the commit IDs we need.
    Then we can use these commit IDs to compare the commits with git diff.

How might using version control make you more confident to make changes that
could break something?

    I can go back to an earlier version at any time, so I can experiment freely.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use it for version control.
